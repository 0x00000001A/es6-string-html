{
  "fileTypes": [
    "js",
    "jsx",
    "ts",
    "tsx",
    "html"
  ],
  "injectionSelector": "L:source.js -comment -string, L:source.js -comment -string, L:source.jsx -comment -string,  L:source.js.jsx -comment -string, L:source.ts -comment -string, L:source.tsx -comment -string",
  "injections": {
    "L:source": {
      "patterns": [
        {
          "match": "<",
          "name": "invalid.illegal.bad-angle-bracket.html"
        }
      ]
    }
  },
  "patterns": [
    {
      "comment": "Case, when comma in the next line",
      "begin": "(=|\\:|\\()?(\\s{0,}\\w{0,})(=|\\:|\\()\\s{0,}($)",
      "beginCaptures": {
        "1": {
          "name": "comment.line"
        },
        "2": {
          "name": "entity.name.function.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "begin": "(\\G)",
          "end": "(`)"
        },
        {
          "include": "text.html.derivative"
        },
        {
          "include": "meta.tag.metadata.meta.void.htm"
        }
      ]
    },
    {
      "comment": "Case, when comma on the same line",
      "begin": "(=|\\:|\\()?(\\s{0,}\\w{0,})(=|\\:|\\()\\s{0,}(`)\\s{0,}($)",
      "beginCaptures": {
        "1": {
          "name": "comment.line"
        },
        "2": {
          "name": "entity.name.function.js"
        }
      },
      "end": "(`)",
      "patterns": [
        {
          "include": "text.html.derivative"
        },
        {
          "include": "meta.tag.metadata.meta.void.htm"
        }
      ]
    },
    {
      "comment": "Single line strings",
      "begin": "(=|\\:|\\()?(\\s{0,}\\w{0,})(=|\\:|\\()\\s{0,}(`)\\s{0,}(<)(\\w+)",
      "beginCaptures": {
        "4": {
          "name": "string.quoted.template.js"
        },
        "5": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "6": {
          "name": "entity.name.tag.html"
        }
      },
      "end": "(`)",
      "endCaptures": {
        "1": {
          "name": "string.quoted.template.js"
        }
      },
      "patterns": [
        {
          "include": "text.html.derivative"
        },
        {
          "include": "meta.tag.metadata.meta.void.htm"
        },
        {
          "comment": "Highlight attributes",
          "begin": "(\\w+)(=)",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.html"
            },
            "2": {
              "name": "punctuation.separator.key-value.html"
            }
          },
          "end": "(\")",
          "endCaptures": {
            "1": {
              "name": "string.quoted.double.html"
            }
          },
          "patterns": [
            {
              "include": "string.quoted.double.html"
            },
            {
              "include": "text.html.derivative"
            }
          ]
        }
      ]
    }
  ],
  "scopeName": "inline.es6-html"
}